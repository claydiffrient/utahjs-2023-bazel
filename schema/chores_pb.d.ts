// @generated by protoc-gen-es v1.3.1 with parameter "keep_empty_files=true,target=js+dts"
// @generated from file schema/chores.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum Frequency
 */
export declare enum Frequency {
  /**
   * @generated from enum value: WEEKLY = 0;
   */
  WEEKLY = 0,

  /**
   * @generated from enum value: MONTHLY = 1;
   */
  MONTHLY = 1,

  /**
   * @generated from enum value: QUARTERLY = 2;
   */
  QUARTERLY = 2,

  /**
   * @generated from enum value: YEARLY = 3;
   */
  YEARLY = 3,
}

/**
 * @generated from message Chore
 */
export declare class Chore extends Message<Chore> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string last_completed = 3;
   */
  lastCompleted: string;

  /**
   * @generated from field: Frequency frequency = 4;
   */
  frequency: Frequency;

  constructor(data?: PartialMessage<Chore>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "Chore";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Chore;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Chore;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Chore;

  static equals(a: Chore | PlainMessage<Chore> | undefined, b: Chore | PlainMessage<Chore> | undefined): boolean;
}

/**
 * @generated from message ChoreResponse
 */
export declare class ChoreResponse extends Message<ChoreResponse> {
  /**
   * @generated from field: repeated Chore chores = 1;
   */
  chores: Chore[];

  constructor(data?: PartialMessage<ChoreResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ChoreResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChoreResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChoreResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChoreResponse;

  static equals(a: ChoreResponse | PlainMessage<ChoreResponse> | undefined, b: ChoreResponse | PlainMessage<ChoreResponse> | undefined): boolean;
}

/**
 * @generated from message Empty
 */
export declare class Empty extends Message<Empty> {
  constructor(data?: PartialMessage<Empty>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "Empty";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Empty;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Empty;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Empty;

  static equals(a: Empty | PlainMessage<Empty> | undefined, b: Empty | PlainMessage<Empty> | undefined): boolean;
}

